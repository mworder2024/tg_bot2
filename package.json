{
  "name": "telegram-rps-tournament-bot",
  "version": "1.0.0",
  "description": "Professional Telegram Rock-Paper-Scissors Tournament Bot with NestJS",
  "author": "Hive Mind Development Team",
  "private": true,
  "license": "MIT",
  "scripts": {
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "cli": "ts-node src/cli-game.ts",
    "lint": "eslint src test --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "test:integration": "jest --config ./test/jest-integration.json",
    "test:unit": "jest --selectProjects unit",
    "test:unit:watch": "jest --selectProjects unit --watch",
    "test:integration:watch": "jest --selectProjects integration --watch",
    "test:e2e:watch": "jest --selectProjects e2e --watch",
    "test:all": "jest --selectProjects unit integration e2e",
    "test:ci": "jest --selectProjects unit integration e2e --coverage --watchAll=false",
    "test:performance": "jest --config ./test/jest-performance.json",
    "test:load": "jest test/performance/load-test.spec.ts",
    "test:security": "npm audit && jest test/security/",
    "test:mutations": "stryker run",
    "test:clear-cache": "jest --clearCache",
    "typeorm": "typeorm-ts-node-commonjs",
    "migration:generate": "npm run typeorm migration:generate -- -d src/config/typeorm.config.ts",
    "migration:run": "npm run typeorm migration:run -- -d src/config/typeorm.config.ts",
    "migration:revert": "npm run typeorm migration:revert -- -d src/config/typeorm.config.ts",
    "db:seed": "ts-node scripts/seed-database.ts",
    "docker:build": "docker build -t rps-tournament-bot .",
    "docker:dev": "docker-compose -f docker-compose.dev.yml up",
    "docker:prod": "docker-compose -f docker-compose.prod.yml up -d"
  },
  "dependencies": {
    "@nestjs/bull": "^11.0.3",
    "@nestjs/common": "^11.1.5",
    "@nestjs/config": "^4.0.2",
    "@nestjs/core": "^11.1.5",
    "@nestjs/jwt": "^11.0.0",
    "@nestjs/passport": "^11.0.5",
    "@nestjs/platform-express": "^11.1.5",
    "@nestjs/throttler": "^6.4.0",
    "@nestjs/typeorm": "^11.0.0",
    "axios": "^1.11.0",
    "bcrypt": "^6.0.0",
    "bull": "^4.12.0",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.0",
    "compression": "^1.7.4",
    "grammy": "^1.21.1",
    "helmet": "^8.1.0",
    "joi": "^17.9.2",
    "passport": "^0.7.0",
    "passport-jwt": "^4.0.1",
    "pg": "^8.11.3",
    "redis": "^4.6.8",
    "reflect-metadata": "^0.2.2",
    "rxjs": "^7.8.1",
    "sqlite3": "^5.1.7",
    "telegraf": "^4.16.3",
    "typeorm": "^0.3.25",
    "winston": "^3.10.0"
  },
  "devDependencies": {
    "@nestjs/cli": "^11.0.7",
    "@nestjs/schematics": "^11.0.5",
    "@nestjs/testing": "^11.1.5",
    "@types/bcrypt": "^6.0.0",
    "@types/express": "^5.0.3",
    "@types/jest": "^30.0.0",
    "@types/node": "^24.1.0",
    "@types/passport-jwt": "^4.0.1",
    "@types/supertest": "^6.0.3",
    "@typescript-eslint/eslint-plugin": "^8.38.0",
    "@typescript-eslint/parser": "^8.38.0",
    "eslint": "^9.32.0",
    "eslint-config-prettier": "^10.1.8",
    "eslint-plugin-prettier": "^5.5.3",
    "https-proxy-agent": "^7.0.6",
    "jest": "^30.0.5",
    "prettier": "^3.6.2",
    "source-map-support": "^0.5.21",
    "supertest": "^7.1.4",
    "ts-jest": "^29.1.0",
    "ts-loader": "^9.4.3",
    "ts-node": "^10.9.1",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.1.3",
    "@faker-js/faker": "^8.4.1",
    "jest-mock-extended": "^4.0.0",
    "nock": "^13.5.0",
    "testcontainers": "^10.7.0",
    "@types/supertest": "^6.0.3",
    "jest-environment-node": "^30.0.5",
    "jest-extended": "^4.0.2",
    "sqlite3": "^5.1.7"
  },
  "engines": {
    "node": ">=20.0.0",
    "npm": ">=9.0.0"
  }
}
